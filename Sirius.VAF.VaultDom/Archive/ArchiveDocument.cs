using System;
using System.Xml.Linq;

using Sirius.VAF.VaultDom.Content;
using Sirius.VAF.VaultDom.Prologue;
using Sirius.VAF.VaultDom.Structure;
using Sirius.VAF.VaultDom.Structure.AutomaticValue;
using Sirius.VAF.VaultDom.Structure.DataTypes;
using Sirius.VAF.VaultDom.Structure.Expressions;
using Sirius.VAF.VaultDom.Structure.Validations;
using Sirius.XML;

namespace Sirius.VAF.VaultDom.Archive {
	public class ArchiveDocument: XDocument {
		internal static readonly Func<Guid, string> StringifyGuid = value => value.ToString("B").ToUpperInvariant();
		private static readonly TypedXElementRegistry registry = CreateRegistry();

		private static TypedXElementRegistry CreateRegistry() {
			var result = new TypedXElementRegistry();
			result.RegisterRootElement<ArchiveElement>(ArchiveElement.ElementName);
			result.RegisterElement<ArchiveElement, CollectionElement<FeatureElement>>(ArchiveElement.FeaturesName);
			result.RegisterElement<CollectionElement<FeatureElement>, FeatureElement>(FeatureElement.ElementName);
			result.RegisterElement<ArchiveElement, TimestampElement>(TimestampElement.ElementName);
			result.RegisterElement<ArchiveElement, DeltaElement>(DeltaElement.ElementName);
			result.RegisterElement<ArchiveElement, VaultElement>(VaultElement.ElementName);
			result.RegisterElement<ArchiveElement, StatisticsElement>(StatisticsElement.ElementName);
			result.RegisterElement<ArchiveElement, ArchiveFlagsElement>(ArchiveFlagsElement.ElementName);
			result.RegisterElement<ArchiveElement, PrologueElement>(PrologueElement.ElementName);
			result.RegisterElement<ArchiveElement, StructureElement>(StructureElement.ElementName);
			result.RegisterElement<ArchiveElement, ContentElement>(AclContentElement.ElementName);
			result.RegisterElement<PrologueElement, CollectionElement<AclDefinitionElement>>(PrologueElement.AclCacheName);
			result.RegisterElement<CollectionElement<AclDefinitionElement>, AclDefinitionElement>(AclDefinitionElement.ElementName);
			result.RegisterElement<AclDefinitionElement, CollectionElement<AclComponentElementBase>>(AclDefinitionElement.AclComponentName);
			result.RegisterElement<CollectionElement<AclComponentElementBase>, NamedAclReferenceElement>(NamedAclReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<AclComponentElementBase>, AceElement>(AceElement.ElementName);
			result.RegisterElement<AceElement, CollectionElement<PseudoUserElement>>(AceElement.PseudoUserElementsName);
			result.RegisterElement<AceElement, CollectionElement<SubjectReferenceElementBase>>(AceElement.UsersAndGroupsName);
			result.RegisterElement<AceElement, CollectionElement<AceRightElement>>(AceElement.RightsName);
			result.RegisterElement<CollectionElement<PseudoUserElement>, PseudoUserElement>(PseudoUserElement.ElementName);
			result.RegisterElement<CollectionElement<SubjectReferenceElementBase>, UserReferenceElement>(UserReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<SubjectReferenceElementBase>, GroupReferenceElement>(GroupReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.SeeElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.AttachObjectsElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.ReadElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.EditElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.ChangePermissionsElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.DeleteElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.MoveInElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.MoveOutElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.TransitionElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.SeeNameElementName);
			result.RegisterElement<CollectionElement<AceRightElement>, AceRightElement>(AceRightElement.AddValuesElementName);
			result.RegisterElement<StructureElement, StructureCapabilitiesElement>(StructureCapabilitiesElement.ElementName);
			result.RegisterElement<StructureElement, CollectionElement<LanguageElement>>(StructureElement.LanguagesName);
			result.RegisterElement<StructureElement, CollectionElement<ObjTypeElement>>(StructureElement.ObjTypesName);
			result.RegisterElement<StructureElement, CollectionElement<PropertyDefElement>>(StructureElement.PropertyDefsName);
			result.RegisterElement<StructureElement, CollectionElement<NamedAclElement>>(StructureElement.NamedAclsName);
			result.RegisterElement<StructureElement, CollectionElement<ClassElement>>(StructureElement.ClassesName);
			result.RegisterElement<StructureElement, CollectionElement<ClassGroupElement>>(StructureElement.ClassGroupsName);
			result.RegisterElement<StructureElement, CollectionElement<WorkflowElement>>(StructureElement.WorkflowsName);
			result.RegisterElement<StructureElement, CollectionElement<StateElement>>(StructureElement.StatesName);
			result.RegisterElement<StructureElement, CollectionElement<TransitionElement>>(StructureElement.TransitionsName);
			result.RegisterElement<StructureElement, CollectionElement<UserElement>>(StructureElement.UserAccountsName);
			result.RegisterElement<StructureElement, CollectionElement<GroupElement>>(StructureElement.UserGroupsName);
			result.RegisterElement<StructureElement, CollectionElement<ViewElement>>(StructureElement.ViewDefsName);
			result.RegisterElement<StructureElement, CollectionElement<ConfigurationRuleElement>>(StructureElement.MetadataCardConfigurationsName);
			result.RegisterElement<CollectionElement<LanguageElement>, LanguageElement>(LanguageElement.ElementName);
			result.RegisterElement<CollectionElement<ObjTypeElement>, ObjTypeElement>(ObjTypeElement.ElementName);
			result.RegisterElement<ObjTypeElement, OwnerElement>(OwnerElement.ElementName);
			result.RegisterElement<ObjTypeElement, ObjTypeFlagsElement>(ObjTypeFlagsElement.ElementName);
			result.RegisterElement<ObjTypeElement, IconElement>(IconElement.ElementName);
			result.RegisterElement<ObjTypeElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<ObjTypeElement, AutomaticAclElement>(AutomaticAclElement.ElementName);
			result.RegisterElement<ObjTypeElement, AclReferenceElement>(ObjTypeElement.AclForNewObjsName);
			result.RegisterElement<ObjTypeElement, CollectionElement<TargetElement>>(ObjTypeElement.BrowsingTargetsName);
			result.RegisterElement<ObjTypeElement, SortingElement>(SortingElement.ElementName);
			result.RegisterElement<ObjTypeElement, ExternalObjTypeElement>(ExternalObjTypeElement.ElementName);
			result.RegisterElement<AclReferenceElement, CachedElement>(CachedElement.ElementName);
			result.RegisterElement<AutomaticAclElement, NamedAclReferenceElement>(NamedAclReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<TargetElement>, TargetElement>(TargetElement.ElementName);
			result.RegisterElement<CollectionElement<PropertyDefElement>, PropertyDefElement>(PropertyDefElement.ElementName);
			result.RegisterElement<PropertyDefElement, PropertyDefFlagsElement>(PropertyDefFlagsElement.ElementName);
			result.RegisterElement<PropertyDefElement, DataTypeElement>(DataTypeElement.ElementName);
			result.RegisterElement<PropertyDefElement, IconElement>(IconElement.ElementName);
			result.RegisterElement<PropertyDefElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<PropertyDefElement, AutomaticValueElement>(AutomaticValueElement.ElementName);
			result.RegisterElement<PropertyDefElement, ObjectTypeElement>(ObjectTypeElement.ElementName);
			result.RegisterElement<PropertyDefElement, ValidationElement>(ValidationElement.ElementName);
			result.RegisterElement<PropertyDefElement, FormattingElement>(FormattingElement.ElementName);
			result.RegisterElement<DataTypeElement, BooleanElement>(BooleanElement.ElementName);
			result.RegisterElement<DataTypeElement, DateElement>(DateElement.ElementName);
			result.RegisterElement<DataTypeElement, FloatElement>(FloatElement.ElementName);
			result.RegisterElement<DataTypeElement, IntegerElement>(IntegerElement.ElementName);
			result.RegisterElement<DataTypeElement, LookupElement>(LookupElement.ElementName);
			result.RegisterElement<DataTypeElement, MultiLineTextElement>(MultiLineTextElement.ElementName);
			result.RegisterElement<DataTypeElement, MultiSelectLookupElement>(MultiSelectLookupElement.ElementName);
			result.RegisterElement<DataTypeElement, TextElement>(TextElement.ElementName);
			result.RegisterElement<DataTypeElement, TimeElement>(TimeElement.ElementName);
			result.RegisterElement<DataTypeElement, Structure.DataTypes.TimestampElement>(Structure.DataTypes.TimestampElement.ElementName);
			result.RegisterElement<LookupElement, SortingElement>(SortingElement.ElementName);
			result.RegisterElement<LookupElement, OwnerPdElement>(OwnerPdElement.ElementName);
			result.RegisterElement<LookupElement, CollectionElement<SearchCondElement>>(LookupElementBase.StaticFilterName);
			result.RegisterElement<MultiSelectLookupElement, SortingElement>(SortingElement.ElementName);
			result.RegisterElement<MultiSelectLookupElement, OwnerPdElement>(OwnerPdElement.ElementName);
			result.RegisterElement<MultiSelectLookupElement, CollectionElement<SearchCondElement>>(LookupElementBase.StaticFilterName);
			result.RegisterElement<AutomaticValueElement, CalcWithPlaceholdersElement>(CalcWithPlaceholdersElement.ElementName);
			result.RegisterElement<AutomaticValueElement, CalcWithVBScriptElement>(CalcWithVBScriptElement.ElementName);
			result.RegisterElement<AutomaticValueElement, AutoNumberSimpleElement>(AutoNumberSimpleElement.ElementName);
			result.RegisterElement<AutomaticValueElement, AutoNumberWithVBScriptElement>(AutoNumberWithVBScriptElement.ElementName);
			result.RegisterElement<CollectionElement<SearchCondElement>, SearchCondElement>(SearchCondElement.ElementName);
			result.RegisterElement<SearchCondElement, ExpressionElement>(ExpressionElement.ElementName);
			result.RegisterElement<SearchCondElement, ConditionElement>(ConditionElement.ElementName);
			result.RegisterElement<SearchCondElement, TypedValueElement>(TypedValueElement.ElementName);
			result.RegisterElement<TypedValueElement, LookupReferenceElement>(LookupReferenceElement.ElementName);
			result.RegisterElement<ExpressionElement, PropertyValueExprElement>(PropertyValueExprElement.ElementName);
			result.RegisterElement<ExpressionElement, TypedValueExprElement>(TypedValueExprElement.ElementName);
			result.RegisterElement<ExpressionElement, StatusValueExprElement>(StatusValueExprElement.ElementName);
			result.RegisterElement<ExpressionElement, AnyFieldExprElement>(AnyFieldExprElement.ElementName);
			result.RegisterElement<ExpressionElement, ACLExprElement>(ACLExprElement.ElementName);
			result.RegisterElement<ExpressionElement, FileValueExprElement>(FileValueExprElement.ElementName);
			result.RegisterElement<ExpressionElement, CollectionElement<LevelElement>>(ExpressionElement.IndirectionName);
			result.RegisterElement<CollectionElement<LevelElement>, LevelElement>(LevelElement.ElementName);
			result.RegisterElement<PropertyValueExprElement, DfCallElement>(DfCallElement.ElementName);
			result.RegisterElement<TypedValueExprElement, DfCallElement>(DfCallElement.ElementName);
			result.RegisterElement<StatusValueExprElement, DfCallElement>(DfCallElement.ElementName);
			result.RegisterElement<ValidationElement, RegExElement>(RegExElement.ElementName);
			result.RegisterElement<ValidationElement, Structure.Validations.VBScriptElement>(Structure.Validations.VBScriptElement.ElementName);
			result.RegisterElement<CollectionElement<NamedAclElement>, NamedAclElement>(NamedAclElement.ElementName);
			result.RegisterElement<NamedAclElement, AclForNaclElement>(AclForNaclElement.ElementName);
			result.RegisterElement<NamedAclElement, AclContentElement>(AclContentElement.ElementName);
			result.RegisterElement<AclForNaclElement, CachedElement>(CachedElement.ElementName);
			result.RegisterElement<AclContentElement, CollectionElement<AclComponentElementBase>>(AclContentElement.AclComponentName);
			result.RegisterElement<CollectionElement<AceElement>, AceElement>(AceElement.ElementName);
			result.RegisterElement<CollectionElement<ClassElement>, ClassElement>(ClassElement.ElementName);
			result.RegisterElement<ClassElement, CollectionElement<PropertyElement>>(ClassElement.AssociatedPropertiesName);
			result.RegisterElement<ClassElement, NamePropertyElement>(NamePropertyElement.ElementName);
			result.RegisterElement<ClassElement, WorkflowReferenceElement>(WorkflowReferenceElement.ElementName);
			result.RegisterElement<ClassElement, AssignmentInfoElement>(AssignmentInfoElement.ElementName);
			result.RegisterElement<ClassElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<ClassElement, AutomaticAclElement>(AutomaticAclElement.ElementName);
			result.RegisterElement<CollectionElement<PropertyElement>, PropertyElement>(PropertyElement.ElementName);
			result.RegisterElement<AssignmentInfoElement, CollectionElement<SignatureElement>>(AssignmentInfoElement.SignaturesName);
			result.RegisterElement<CollectionElement<SignatureElement>, SignatureElement>(SignatureElement.ElementName);
			result.RegisterElement<SignatureElement, ManifestationElement>(ManifestationElement.ElementName);
			result.RegisterElement<SignatureElement, FreeformElement>(FreeformElement.ElementName);
			result.RegisterElement<CollectionElement<ClassGroupElement>, ClassGroupElement>(ClassGroupElement.ElementName);
			result.RegisterElement<ClassGroupElement, CollectionElement<ClassReferenceElement>>(ClassGroupElement.MembersName);
			result.RegisterElement<ClassGroupElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<ClassReferenceElement>, ClassReferenceElement>(ClassReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<WorkflowElement>, WorkflowElement>(WorkflowElement.ElementName);
			result.RegisterElement<WorkflowElement, ClassReferenceElement>(WorkflowElement.WithClassName);
			result.RegisterElement<WorkflowElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<WorkflowElement, LayoutElement>(LayoutElement.ElementName);
			result.RegisterElement<WorkflowElement, CollectionElement<StateReferenceElement>>(WorkflowElement.StatesName);
			result.RegisterElement<WorkflowElement, CollectionElement<TransitionReferenceElement>>(WorkflowElement.TransitionsName);
			result.RegisterElement<CollectionElement<StateReferenceElement>, StateReferenceElement>(StateReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<TransitionReferenceElement>, TransitionReferenceElement>(TransitionReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<StateElement>, StateElement>(StateElement.ElementName);
			result.RegisterElement<StateElement, IconElement>(IconElement.ElementName);
			result.RegisterElement<StateElement, InOutElement>(InOutElement.ElementName);
			result.RegisterElement<StateElement, ActionsElement>(ActionsElement.ElementName);
			result.RegisterElement<InOutElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<InOutElement, PreCondsElement>(PreCondsElement.ElementName);
			result.RegisterElement<InOutElement, PostCondsElement>(PostCondsElement.ElementName);
			result.RegisterElement<PreCondsElement, CondsFlagsElement>(CondsFlagsElement.ElementName);
			result.RegisterElement<PreCondsElement, CriteriaElement>(CriteriaElement.ElementName);
			result.RegisterElement<PreCondsElement, ScriptElement>(ScriptElement.ElementName);
			result.RegisterElement<CriteriaElement, SearchCondElement>(SearchCondElement.ElementName);
			result.RegisterElement<PostCondsElement, CondsFlagsElement>(CondsFlagsElement.ElementName);
			result.RegisterElement<PostCondsElement, CriteriaElement>(CriteriaElement.ElementName);
			result.RegisterElement<PostCondsElement, ScriptElement>(ScriptElement.ElementName);
			result.RegisterElement<ActionsElement, DeleteElement>(DeleteElement.ElementName);
			result.RegisterElement<ActionsElement, MarkForArchivingElement>(MarkForArchivingElement.ElementName);
			result.RegisterElement<ActionsElement, ChangePermissionsElement>(ChangePermissionsElement.ElementName);
			result.RegisterElement<ActionsElement, CreateAssignmentElement>(CreateAssignmentElement.ElementName);
			result.RegisterElement<ActionsElement, SendNotificationElement>(SendNotificationElement.ElementName);
			result.RegisterElement<ActionsElement, SetPropertiesElement>(SetPropertiesElement.ElementName);
			result.RegisterElement<ActionsElement, ConvertToPdfElement>(ConvertToPdfElement.ElementName);
			result.RegisterElement<ActionsElement, RunScriptElement>(RunScriptElement.ElementName);
			result.RegisterElement<ActionsElement, ActionElement>(ActionElement.ElementName);
			result.RegisterElement<ChangePermissionsElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<CreateAssignmentElement, DeadlineElement>(DeadlineElement.ElementName);
			result.RegisterElement<CreateAssignmentElement, AssignedToElement>(AssignedToElement.ElementName);
			result.RegisterElement<CreateAssignmentElement, MonitoredByElement>(MonitoredByElement.ElementName);
			result.RegisterElement<AssignedToElement, UserReferenceElement>(UserReferenceElement.ElementName);
			result.RegisterElement<AssignedToElement, GroupReferenceElement>(GroupReferenceElement.ElementName);
			result.RegisterElement<AssignedToElement, CollectionElement<PseudoUserElement>>(AssignmentSubjectsElementBase.PseudoUserElementsName);
			result.RegisterElement<MonitoredByElement, UserReferenceElement>(UserReferenceElement.ElementName);
			result.RegisterElement<MonitoredByElement, GroupReferenceElement>(GroupReferenceElement.ElementName);
			result.RegisterElement<MonitoredByElement, CollectionElement<PseudoUserElement>>(AssignmentSubjectsElementBase.PseudoUserElementsName);
			result.RegisterElement<SendNotificationElement, RecipientsElement>(RecipientsElement.ElementName);
			result.RegisterElement<RecipientsElement, UserReferenceElement>(UserReferenceElement.ElementName);
			result.RegisterElement<RecipientsElement, GroupReferenceElement>(GroupReferenceElement.ElementName);
			result.RegisterElement<RecipientsElement, CollectionElement<PseudoUserElement>>(AssignmentSubjectsElementBase.PseudoUserElementsName);
			result.RegisterElement<ActionElement, CreateSeparateAssignmentElement>(CreateSeparateAssignmentElement.ElementName);
			result.RegisterElement<CreateSeparateAssignmentElement, ClassReferenceElement>(ClassReferenceElement.ElementName);
			result.RegisterElement<CreateSeparateAssignmentElement, DeadlineElement>(DeadlineElement.ElementName);
			result.RegisterElement<CreateSeparateAssignmentElement, AssignedToElement>(AssignedToElement.ElementName);
			result.RegisterElement<CreateSeparateAssignmentElement, MonitoredByElement>(MonitoredByElement.ElementName);
			result.RegisterElement<CollectionElement<TransitionElement>, TransitionElement>(TransitionElement.ElementName);
			result.RegisterElement<TransitionElement, TriggerElement>(TriggerElement.ElementName);
			result.RegisterElement<TransitionElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<TransitionElement, SignatureElement>(SignatureElement.ElementName);
			result.RegisterElement<TriggerElement, RelativeTimeElement>(RelativeTimeElement.ElementName);
			result.RegisterElement<TriggerElement, CriteriaFulfilledElement>(CriteriaFulfilledElement.ElementName);
			result.RegisterElement<TriggerElement, AllowedByScriptElement>(AllowedByScriptElement.ElementName);
			result.RegisterElement<TriggerElement, AssignmentCompleteElement>(AssignmentCompleteElement.ElementName);
			result.RegisterElement<TriggerElement, AssignmentRejectedElement>(AssignmentRejectedElement.ElementName);
			result.RegisterElement<CriteriaFulfilledElement, SearchCondElement>(SearchCondElement.ElementName);
			result.RegisterElement<CollectionElement<UserElement>, UserElement>(UserElement.ElementName);
			result.RegisterElement<UserElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<GroupElement>, GroupElement>(GroupElement.ElementName);
			result.RegisterElement<GroupElement, CollectionElement<SubjectReferenceElementBase>>(GroupElement.MembersName);
			result.RegisterElement<GroupElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<GroupElement, ExternalGroupElement>(ExternalGroupElement.ElementName);
			result.RegisterElement<CollectionElement<ViewElement>, ViewElement>(ViewElement.ElementName);
			result.RegisterElement<ViewElement, ViewFlagsElement>(ViewFlagsElement.ElementName);
			result.RegisterElement<ViewElement, ViewAllowedOperationsElement>(ViewAllowedOperationsElement.ElementName);
			result.RegisterElement<ViewElement, SearchDefElement>(SearchDefElement.ElementName);
			result.RegisterElement<ViewElement, ViewParentElement>(ViewParentElement.ElementName);
			result.RegisterElement<ViewElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<ViewElement, CollectionElement<ViewUiSettingElement>>(ViewElement.UiSettingsName);
			result.RegisterElement<CollectionElement<ViewUiSettingElement>, ViewUiSettingElement>(ViewUiSettingElement.ElementName);
			result.RegisterElement<SearchDefElement, SearchFlagsElement>(SearchFlagsElement.ElementName);
			result.RegisterElement<SearchDefElement, CollectionElement<SearchCondElement>>(SearchDefElement.SearchCondsName);
			result.RegisterElement<SearchDefElement, CollectionElement<ExpressionExElement>>(SearchDefElement.LevelsName);
			result.RegisterElement<CollectionElement<ExpressionExElement>, ExpressionExElement>(ExpressionExElement.ElementName);
			result.RegisterElement<ExpressionExElement, CollectionElement<SearchCondElement>>(SearchDefElement.SearchCondsName);
			result.RegisterElement<ExpressionExElement, ExpressionElement>(ExpressionElement.ElementName);
			result.RegisterElement<ExpressionExElement, ExpressionExFlagsElement>(ExpressionExFlagsElement.ElementName);
			result.RegisterElement<ViewParentElement, ViewLocationElement>(ViewLocationElement.ElementName);
			result.RegisterElement<ViewLocationElement, CollectionElement<FolderReferenceElement>>(ViewLocationElement.ParentFoldersName);
			result.RegisterElement<ViewLocationElement, ViewOverlappingElement>(ViewOverlappingElement.ElementName);
			result.RegisterElement<CollectionElement<FolderReferenceElement>, FolderReferenceElement>(FolderReferenceElement.ElementName);
			result.RegisterElement<CollectionElement<ConfigurationRuleElement>, ConfigurationRuleElement>(ConfigurationRuleElement.ElementName);
			result.RegisterElement<ContentElement, CapabilitiesElement>(CapabilitiesElement.ElementName);
			result.RegisterElement<ContentElement, VlItemElement>(VlItemElement.ElementName);
			result.RegisterElement<VlItemElement, ParentReferenceElement>(ParentReferenceElement.ElementName);
			result.RegisterElement<VlItemElement, IconElement>(IconElement.ElementName);
			result.RegisterElement<VlItemElement, AclReferenceElement>(AclReferenceElement.ElementName);
			result.RegisterElement<VlItemElement, OriginalIdentityElement>(OriginalIdentityElement.ElementName);
			return result;
		}

		public ArchiveDocument(object content) {
			registry.ApplyToDocument(this);
			Add(content);
		}

		public ArchiveElement Archive => (ArchiveElement)Root;
	}
}
